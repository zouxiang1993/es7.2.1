@startuml

interface Transport {
    ---
    // 注册一个请求处理器, 处理接收到的请求
    +void registerRequestHandler
    +getRequestHandler(String action)
    // 建立到某个节点的连接 (默认13个tcp连接)
    +openConnection(DiscoveryNode, ConnectionProfile, ActionListener<Connection>)

    +void setMessageListener(TransportMessageListener listener)
    +BoundTransportAddress boundAddress()
    +Map<String, BoundTransportAddress> profileBoundAddresses()
}

interface Connection{
    表示到一个节点的单向连接
    ---
    // 获取远端节点
    +DiscoveryNode getNode()
    // 发送请求，Options中可以指定使用哪种类型的tcp连接
    +void sendRequest(long requestId, String action, TransportRequest, TransportRequestOptions)
    ...
}

class ConnectionProfile {
    // 表示到一个节点的连接配置
    ---
    // tcp连接总数
    +int numConnections
    // 每种类型的连接 的句柄
    +List<ConnectionTypeHandle> handles

    ...
}

class ConnectionTypeHandle{

    ---
    // 从给定的集合中轮询选择一个给定类型的tcp连接
    +T getChannel(List<T> channels)
}

class ConnectionManager {
}

ConnectionProfile *-- "n" ConnectionTypeHandle
@enduml