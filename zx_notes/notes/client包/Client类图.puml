@startuml

set namespaceSeparator ::

note as N1
    泛型参数：
    动作类型: Action
    请求参数: Request extends ActionRequest
    响应: Response extends ActionResponse
    请求构造器: RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder>
end note

interface ElasticsearchClient{
    用来执行动作(Action)的Client
    ---
    +ActionFuture<Response> execute(Action action, Request request)
    // 同上，listener是收到结果后的回调函数
    +void execute(Action action, Request request, ActionListener<Response> listener)
    // 返回该client用于执行请求的线程池
    ThreadPool threadPool()
}

interface Client extends ElasticsearchClient{
    // 对ES集群操作的一站式接口:
    // 集群层面的操作，索引层面的操作，文档层面的操作。
    ---
    +AdminClient admin()
    +Settings settings()
    // 所有操作都是异步的，有两种形式
    // <font color="red">1. 返回ActionFuture  2. 传入一个Listener 回调
    index / update / delete / bulk
    get / multiGet
    search / multiSearch
    searchScroll / clearScroll
    termVectors
    explain
    fieldCaps
}

abstract class AbstractClient implements Client{
    #{abstract} void doExecute(Action action, Request request, ActionListener listener);
}

interface ClusterAdminClient extends ElasticsearchClient{
    对集群的操作
    ---
    health / state
    updateSettings
    reroute
    nodesInfo / clusterStats
    listTasks / getTask / cancelTasks
}

class AbstractClient.ClusterAdmin implements ClusterAdminClient{
}

interface IndicesAdminClient extends ElasticsearchClient{
    对索引的操作
    ---
    exists / typesExists
    stats
    recoveries
    segments
    shardStores
    create / delete / open / close
    refresh
    flush / syncedFlush
    forceMerge
    upgrade
    getMappings / putMapping
    aliases / getAliases
    clearCache
    updateSettings
    analyze
}

class AbstractClient.IndicesAdmin implements IndicesAdminClient{
}

abstract class TransportClient extends AbstractClient{
}

class NodeClient extends AbstractClient{
    // 在本地Node执行Action
    ---
    // 两类Action之间的映射关系
    -Map<Action, TransportAction> actions
    ---
    // 完成从GenericAction到TransportAction之间的转换
    -TransportAction transportAction(GenericAction action)
}

interface AdminClient{
    +ClusterAdminClient cluster()
    +IndicesAdminClient indices()
}

AbstractClient -left-- AdminClient
@enduml